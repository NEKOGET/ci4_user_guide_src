**************
PSR対応について
**************

`PHP-FIG <https://www.php-fig.org/>`_ は2009年に作成されました。
インターフェイスやスタイルガイドを継承することでフレームワーク間でのコードの相互運用性を高めることを目的としています。CodeIgniter はFGのメンバーではありませんが、
この提案に対し対応をしています。このガイドは
PSRの草案提案に基準しています。それらは次の通りです。

**PSR-1: 基本コーディング標準**

基本的なクラス、メソッドおよびファイルの命名基準を対象としています。私たちの
`スタイルガイド <https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.rst>`_
は PSR-1を適用しその上で独自の要件を追加しました。

**PSR-2: コーディングスタイルガイド**

PSRが最初に発表された時、かなり物議を醸していました。. CodeIgniter は多くの推奨事項を満たしていますが、
しかし全てを満たせたわけではありません。

**PSR-3: ロガーインターフェイス**

:doc:`ロガー </general/logging>` はこのPSRで提案されているすべてのインターフェイスを実装しています。  

**PSR-4: オートローデング標準**

このPSRはファイルと名前空間を整理し、
標準のオートロードを可能にする方法を提供しています。:doc:`Autoloader </concepts/autoloader>` は PSR-4 の推奨事項を満たしています。

**PSR-6: キャッシュインターフェイス**

CodeIgniter はこのPSRを満たしません。 なぜなら私たちはそれがそのニーズを超えていると考えているからです。新しく提案された、
`シンプルキャッシュインターフェイス<https://github.com/dragoonis/fig-standards/blob/psr-simplecache/proposed/simplecache.md>`_
は、私たちが考慮したいもののように見えます。

**PSR-7: HTTP メッセージインターフェイス**

このPSRはHTTP対話を表す方法を標準化しています。コンセプトの多くは、私たちの一部となりました。
しかし、 CodeIgniterはHTMLレイヤーの推奨事項との互換性を追求していません。

---

PSRを満たすと私たちは主張していますが、満たせていない箇所、正しく実行できなかった箇所を発見した場合はおしらせください。
修正するか、必要な変更を加えてプルリクエストします。
